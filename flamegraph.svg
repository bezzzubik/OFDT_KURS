<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="182" onload="init(evt)" viewBox="0 0 1200 182" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="182.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="165" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="165" > </text>
<g id="frames">
<g >
<title>n1_4 (12,057,175 samples, 0.08%)</title><rect x="1177.8" y="101" width="0.9" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1180.80" y="111.5" ></text>
</g>
<g >
<title>OFFTW_func (3,489,413,399 samples, 22.35%)</title><rect x="476.2" y="69" width="263.8" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="479.24" y="79.5" >OFFTW_func</text>
</g>
<g >
<title>Symbol_produce (16,108,617 samples, 0.10%)</title><rect x="15.6" y="85" width="1.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="18.65" y="95.5" ></text>
</g>
<g >
<title>apply_before (4,016,001 samples, 0.03%)</title><rect x="912.6" y="85" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="915.61" y="95.5" ></text>
</g>
<g >
<title>fftw_cpy2d_ci (11,916,409 samples, 0.08%)</title><rect x="1145.6" y="101" width="0.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1148.64" y="111.5" ></text>
</g>
<g >
<title>apply_iter (29,427,836 samples, 0.19%)</title><rect x="926.1" y="53" width="2.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="929.13" y="63.5" ></text>
</g>
<g >
<title>apply (111,233,085 samples, 0.71%)</title><rect x="878.7" y="69" width="8.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="881.66" y="79.5" ></text>
</g>
<g >
<title>fftw_execute (117,326,504 samples, 0.75%)</title><rect x="890.5" y="69" width="8.8" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="893.46" y="79.5" ></text>
</g>
<g >
<title>apply_r2hc (2,403,348 samples, 0.02%)</title><rect x="920.1" y="85" width="0.1" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="923.06" y="95.5" ></text>
</g>
<g >
<title>apply_buf (18,238,561 samples, 0.12%)</title><rect x="1164.6" y="85" width="1.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1167.62" y="95.5" ></text>
</g>
<g >
<title>fftw_md5putc (12,809,330 samples, 0.08%)</title><rect x="946.7" y="85" width="1.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="949.69" y="95.5" ></text>
</g>
<g >
<title>fftw_cpy2d_pair_ci (4,008,917 samples, 0.03%)</title><rect x="1167.0" y="85" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1169.96" y="95.5" ></text>
</g>
<g >
<title>fftw_cpy2d (122,976,673 samples, 0.79%)</title><rect x="1136.3" y="101" width="9.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1139.34" y="111.5" ></text>
</g>
<g >
<title>dobatch_r2hc (1,534,633 samples, 0.01%)</title><rect x="1166.4" y="85" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1169.42" y="95.5" ></text>
</g>
<g >
<title>apply_iter (61,065,450 samples, 0.39%)</title><rect x="915.4" y="85" width="4.7" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="918.44" y="95.5" ></text>
</g>
<g >
<title>fftw_cpy2d (2,427,462 samples, 0.02%)</title><rect x="1166.5" y="85" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1169.53" y="95.5" ></text>
</g>
<g >
<title>apply_iter (5,109,786 samples, 0.03%)</title><rect x="1131.1" y="101" width="0.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1134.10" y="111.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,823,936 samples, 0.03%)</title><rect x="910.3" y="85" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="913.29" y="95.5" ></text>
</g>
<g >
<title>apply_ip_sq (17,520,613 samples, 0.11%)</title><rect x="914.1" y="85" width="1.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="917.12" y="95.5" ></text>
</g>
<g >
<title>n1_16 (144,356,867 samples, 0.92%)</title><rect x="899.3" y="69" width="10.9" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="902.33" y="79.5" ></text>
</g>
<g >
<title>fftw_cpy2d_ci (2,395,096 samples, 0.02%)</title><rect x="1166.7" y="85" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1169.72" y="95.5" ></text>
</g>
<g >
<title>[unknown] (236,970,593 samples, 1.52%)</title><rect x="920.5" y="69" width="17.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="923.53" y="79.5" ></text>
</g>
<g >
<title>apply (70,542,475 samples, 0.45%)</title><rect x="1125.1" y="101" width="5.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1128.10" y="111.5" ></text>
</g>
<g >
<title>fftw_cpy2d_tiledbuf (5,635,775 samples, 0.04%)</title><rect x="1147.7" y="101" width="0.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1150.69" y="111.5" ></text>
</g>
<g >
<title>malloc (11,155,311 samples, 0.07%)</title><rect x="1172.2" y="101" width="0.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1175.23" y="111.5" ></text>
</g>
<g >
<title>r2cf_8 (13,549,005 samples, 0.09%)</title><rect x="1188.9" y="101" width="1.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1191.86" y="111.5" ></text>
</g>
<g >
<title>n1_8 (4,812,398 samples, 0.03%)</title><rect x="1178.7" y="101" width="0.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1181.72" y="111.5" ></text>
</g>
<g >
<title>fftw_transpose (3,180,903 samples, 0.02%)</title><rect x="1171.7" y="101" width="0.3" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1174.74" y="111.5" ></text>
</g>
<g >
<title>n1_16 (2,265,914,363 samples, 14.51%)</title><rect x="951.5" y="85" width="171.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="954.55" y="95.5" >n1_16</text>
</g>
<g >
<title>apply (5,614,503 samples, 0.04%)</title><rect x="947.7" y="53" width="0.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="950.72" y="63.5" ></text>
</g>
<g >
<title>dotile (1,621,676 samples, 0.01%)</title><rect x="1133.9" y="101" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1136.89" y="111.5" ></text>
</g>
<g >
<title>main (11,818,968,763 samples, 75.71%)</title><rect x="16.9" y="85" width="893.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="19.90" y="95.5" >main</text>
</g>
<g >
<title>fftw_isqrt (99,978,289 samples, 0.64%)</title><rect x="1148.5" y="101" width="7.5" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1151.48" y="111.5" ></text>
</g>
<g >
<title>r2cfII_4 (3,222,128 samples, 0.02%)</title><rect x="948.9" y="53" width="0.3" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="951.91" y="63.5" ></text>
</g>
<g >
<title>r2cfII_2 (1,618,682 samples, 0.01%)</title><rect x="1168.9" y="85" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1171.86" y="95.5" ></text>
</g>
<g >
<title>fftw_rdft_solve (25,480,570 samples, 0.16%)</title><rect x="1169.5" y="101" width="1.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1172.46" y="111.5" ></text>
</g>
<g >
<title>apply_cpy2dco (10,364,122 samples, 0.07%)</title><rect x="912.9" y="85" width="0.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="915.91" y="95.5" ></text>
</g>
<g >
<title>r2cfII_4 (7,124,766 samples, 0.05%)</title><rect x="1179.1" y="101" width="0.6" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1182.14" y="111.5" ></text>
</g>
<g >
<title>r2cfII_8 (1,560,451 samples, 0.01%)</title><rect x="1179.7" y="101" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1182.67" y="111.5" ></text>
</g>
<g >
<title>fftw_compute_tilesz (4,779,002 samples, 0.03%)</title><rect x="940.4" y="85" width="0.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="943.39" y="95.5" ></text>
</g>
<g >
<title>fftw_cpy2d_pair_co (4,833,552 samples, 0.03%)</title><rect x="1147.2" y="101" width="0.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1150.21" y="111.5" ></text>
</g>
<g >
<title>[unknown] (1,607,752 samples, 0.01%)</title><rect x="1172.0" y="85" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1175.05" y="95.5" ></text>
</g>
<g >
<title>cfree (4,004,460 samples, 0.03%)</title><rect x="938.5" y="85" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="941.50" y="95.5" ></text>
</g>
<g >
<title>fftw_tile2d (4,787,379 samples, 0.03%)</title><rect x="1171.4" y="101" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1174.38" y="111.5" ></text>
</g>
<g >
<title>apply_r2hc (5,535,609 samples, 0.04%)</title><rect x="1166.0" y="85" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1169.00" y="95.5" ></text>
</g>
<g >
<title>fftw_cpy2d (21,576,268 samples, 0.14%)</title><rect x="941.1" y="85" width="1.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="944.09" y="95.5" ></text>
</g>
<g >
<title>mkplan (7,940,031 samples, 0.05%)</title><rect x="950.9" y="85" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="953.95" y="95.5" ></text>
</g>
<g >
<title>fftw_cpy2d_co (15,891,998 samples, 0.10%)</title><rect x="943.9" y="85" width="1.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="946.87" y="95.5" ></text>
</g>
<g >
<title>__vdso_gettimeofday (2,372,672 samples, 0.02%)</title><rect x="1124.9" y="101" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1127.92" y="111.5" ></text>
</g>
<g >
<title>apply_after (1,599,521 samples, 0.01%)</title><rect x="1130.4" y="101" width="0.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1133.43" y="111.5" ></text>
</g>
<g >
<title>apply_tiled (2,394,467 samples, 0.02%)</title><rect x="920.2" y="85" width="0.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="923.24" y="95.5" ></text>
</g>
<g >
<title>mkplan (4,039,225 samples, 0.03%)</title><rect x="1173.1" y="101" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1176.07" y="111.5" ></text>
</g>
<g >
<title>__vdso_gettimeofday (33,371,990 samples, 0.21%)</title><rect x="1162.1" y="85" width="2.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1165.10" y="95.5" ></text>
</g>
<g >
<title>r2cf_2 (7,914,439 samples, 0.05%)</title><rect x="1123.1" y="85" width="0.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1126.06" y="95.5" ></text>
</g>
<g >
<title>dobatch_r2hc (14,564,434 samples, 0.09%)</title><rect x="939.3" y="85" width="1.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="942.29" y="95.5" ></text>
</g>
<g >
<title>htab_lookup (1,605,400 samples, 0.01%)</title><rect x="950.6" y="85" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="953.64" y="95.5" ></text>
</g>
<g >
<title>[unknown] (1,613,846 samples, 0.01%)</title><rect x="1173.1" y="69" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1176.07" y="79.5" ></text>
</g>
<g >
<title>Symbol_produce (1,834,616,523 samples, 11.75%)</title><rect x="740.0" y="69" width="138.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="742.99" y="79.5" >Symbol_produce</text>
</g>
<g >
<title>hinsert0 (2,385,308 samples, 0.02%)</title><rect x="950.5" y="85" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="953.46" y="95.5" ></text>
</g>
<g >
<title>htab_insert (1,619,112 samples, 0.01%)</title><rect x="910.8" y="69" width="0.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="913.75" y="79.5" ></text>
</g>
<g >
<title>fftw_cpy1d (61,742,488 samples, 0.40%)</title><rect x="930.8" y="53" width="4.7" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="933.82" y="63.5" ></text>
</g>
<g >
<title>t1_2 (2,411,876 samples, 0.02%)</title><rect x="1124.2" y="85" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1127.20" y="95.5" ></text>
</g>
<g >
<title>fftw_md5putc (4,005,242 samples, 0.03%)</title><rect x="1156.1" y="101" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1159.10" y="111.5" ></text>
</g>
<g >
<title>apply_dit (5,632,574 samples, 0.04%)</title><rect x="913.7" y="85" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="916.69" y="95.5" ></text>
</g>
<g >
<title>copy (6,404,650 samples, 0.04%)</title><rect x="938.8" y="85" width="0.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="941.81" y="95.5" ></text>
</g>
<g >
<title>OFFTW_func (32,252,534 samples, 0.21%)</title><rect x="13.2" y="85" width="2.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="16.21" y="95.5" ></text>
</g>
<g >
<title>fftw_cpy2d_tiledbuf (2,355,134 samples, 0.02%)</title><rect x="945.2" y="85" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="948.19" y="95.5" ></text>
</g>
<g >
<title>apply_ip_sq (4,849,112 samples, 0.03%)</title><rect x="925.8" y="53" width="0.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="928.77" y="63.5" ></text>
</g>
<g >
<title>awake (236,970,593 samples, 1.52%)</title><rect x="920.5" y="85" width="17.9" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="923.53" y="95.5" ></text>
</g>
<g >
<title>fftw_cpy1d (13,370,900 samples, 0.09%)</title><rect x="1135.3" y="101" width="1.0" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1138.33" y="111.5" ></text>
</g>
<g >
<title>[unknown] (2,883,102 samples, 0.02%)</title><rect x="910.7" y="85" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="913.66" y="95.5" ></text>
</g>
<g >
<title>apply_r2hc (7,840,174 samples, 0.05%)</title><rect x="948.1" y="53" width="0.6" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="951.15" y="63.5" ></text>
</g>
<g >
<title>r2cf_4 (2,297,000 samples, 0.01%)</title><rect x="1123.7" y="85" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1126.66" y="95.5" ></text>
</g>
<g >
<title>n1_2 (58,583,558 samples, 0.38%)</title><rect x="1173.4" y="101" width="4.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1176.38" y="111.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,587,716 samples, 0.01%)</title><rect x="949.2" y="69" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="952.22" y="79.5" ></text>
</g>
<g >
<title>fftw_dft_solve (4,826,269 samples, 0.03%)</title><rect x="1148.1" y="101" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1151.11" y="111.5" ></text>
</g>
<g >
<title>apply_cut (1,582,071 samples, 0.01%)</title><rect x="925.6" y="53" width="0.2" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="928.65" y="63.5" ></text>
</g>
<g >
<title>fftw_cpy2d_tiled (1,526,021 samples, 0.01%)</title><rect x="1147.6" y="101" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1150.57" y="111.5" ></text>
</g>
<g >
<title>apply_r2hc (27,836,705 samples, 0.18%)</title><rect x="1131.5" y="101" width="2.1" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1134.48" y="111.5" ></text>
</g>
<g >
<title>[unknown] (5,566,153 samples, 0.04%)</title><rect x="951.1" y="69" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="954.13" y="79.5" ></text>
</g>
<g >
<title>r2cf_8 (2,406,712 samples, 0.02%)</title><rect x="1123.8" y="85" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1126.83" y="95.5" ></text>
</g>
<g >
<title>hash (1,607,752 samples, 0.01%)</title><rect x="1172.0" y="101" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1175.05" y="111.5" ></text>
</g>
<g >
<title>[unknown] (4,039,225 samples, 0.03%)</title><rect x="1173.1" y="85" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1176.07" y="95.5" ></text>
</g>
<g >
<title>t1_4 (1,600,695 samples, 0.01%)</title><rect x="1124.4" y="85" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1127.38" y="95.5" ></text>
</g>
<g >
<title>fftw_measure_execution_time (171,153,142 samples, 1.10%)</title><rect x="1156.4" y="101" width="12.9" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1159.40" y="111.5" ></text>
</g>
<g >
<title>iterate (1,599,349 samples, 0.01%)</title><rect x="914.0" y="69" width="0.1" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="917.00" y="79.5" ></text>
</g>
<g >
<title>apply_cpy2dco (3,216,244 samples, 0.02%)</title><rect x="925.4" y="53" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="928.40" y="63.5" ></text>
</g>
<g >
<title>mkplan (1,608,354 samples, 0.01%)</title><rect x="951.4" y="53" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="954.43" y="63.5" ></text>
</g>
<g >
<title>iterate (17,915,116 samples, 0.11%)</title><rect x="1167.4" y="85" width="1.4" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1170.44" y="95.5" ></text>
</g>
<g >
<title>apply (62,827,460 samples, 0.40%)</title><rect x="920.7" y="53" width="4.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="923.65" y="63.5" ></text>
</g>
<g >
<title>apply_cpy2dco (2,417,849 samples, 0.02%)</title><rect x="1130.8" y="101" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1133.79" y="111.5" ></text>
</g>
<g >
<title>fftw_malloc_plain (1,603,214 samples, 0.01%)</title><rect x="946.5" y="85" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="949.52" y="95.5" ></text>
</g>
<g >
<title>malloc@plt (1,588,485 samples, 0.01%)</title><rect x="950.8" y="85" width="0.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="953.83" y="95.5" ></text>
</g>
<g >
<title>fftw_isqrt (15,163,730 samples, 0.10%)</title><rect x="945.4" y="85" width="1.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="948.37" y="95.5" ></text>
</g>
<g >
<title>fftw_tensor_compress_contiguous.part.0 (1,587,716 samples, 0.01%)</title><rect x="949.2" y="85" width="0.1" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="952.22" y="95.5" ></text>
</g>
<g >
<title>search0 (2,420,956 samples, 0.02%)</title><rect x="1124.0" y="85" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1127.02" y="95.5" ></text>
</g>
<g >
<title>r2cf_2 (78,608,327 samples, 0.50%)</title><rect x="1179.8" y="101" width="5.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1182.79" y="111.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,619,388 samples, 0.01%)</title><rect x="920.5" y="53" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="923.53" y="63.5" ></text>
</g>
<g >
<title>cfree (3,150,659 samples, 0.02%)</title><rect x="1133.6" y="101" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1136.65" y="111.5" ></text>
</g>
<g >
<title>apply_tiledbuf (1,475,810 samples, 0.01%)</title><rect x="920.4" y="85" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="923.42" y="95.5" ></text>
</g>
<g >
<title>apply_after (3,907,070 samples, 0.03%)</title><rect x="912.3" y="85" width="0.3" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="915.31" y="95.5" ></text>
</g>
<g >
<title>n1_2 (1,622,349 samples, 0.01%)</title><rect x="1122.8" y="85" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1125.82" y="95.5" ></text>
</g>
<g >
<title>r2cf_4 (41,317,379 samples, 0.26%)</title><rect x="1185.7" y="101" width="3.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1188.73" y="111.5" ></text>
</g>
<g >
<title>fftw_cpy2d_ci (15,187,858 samples, 0.10%)</title><rect x="942.7" y="85" width="1.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="945.72" y="95.5" ></text>
</g>
<g >
<title>Modulation (5,873,518,840 samples, 37.62%)</title><rect x="32.3" y="69" width="443.9" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="35.29" y="79.5" >Modulation</text>
</g>
<g >
<title>[libc.so.6] (11,904,991,102 samples, 76.26%)</title><rect x="10.4" y="101" width="899.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.40" y="111.5" >[libc.so.6]</text>
</g>
<g >
<title>fftw_null_awake (19,800,118 samples, 0.13%)</title><rect x="947.7" y="85" width="1.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="950.72" y="95.5" ></text>
</g>
<g >
<title>transpose (4,768,570 samples, 0.03%)</title><rect x="1124.6" y="85" width="0.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1127.56" y="95.5" ></text>
</g>
<g >
<title>fftw_cpy2d_pair_ci (8,846,815 samples, 0.06%)</title><rect x="1146.5" y="101" width="0.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1149.54" y="111.5" ></text>
</g>
<g >
<title>r2cf_4 (6,397,505 samples, 0.04%)</title><rect x="937.9" y="53" width="0.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="940.90" y="63.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,613,846 samples, 0.01%)</title><rect x="1173.1" y="53" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1176.07" y="63.5" ></text>
</g>
<g >
<title>apply (18,983,791 samples, 0.12%)</title><rect x="910.9" y="85" width="1.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="913.87" y="95.5" ></text>
</g>
<g >
<title>a.out (15,611,485,111 samples, 100.00%)</title><rect x="10.0" y="117" width="1180.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="13.00" y="127.5" >a.out</text>
</g>
<g >
<title>r2cf_2 (14,310,509 samples, 0.09%)</title><rect x="936.8" y="53" width="1.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="939.82" y="63.5" ></text>
</g>
<g >
<title>Modulation (32,902,877 samples, 0.21%)</title><rect x="10.7" y="85" width="2.5" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="13.72" y="95.5" ></text>
</g>
<g >
<title>t1_2 (2,397,781 samples, 0.02%)</title><rect x="1169.2" y="85" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1172.15" y="95.5" ></text>
</g>
<g >
<title>fftw_choose_radix (2,399,406 samples, 0.02%)</title><rect x="951.2" y="53" width="0.2" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="954.18" y="63.5" ></text>
</g>
<g >
<title>fftw_transpose (15,967,890 samples, 0.10%)</title><rect x="935.5" y="53" width="1.3" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="938.55" y="63.5" ></text>
</g>
<g >
<title>iterate (4,030,475 samples, 0.03%)</title><rect x="925.1" y="37" width="0.3" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="928.10" y="47.5" ></text>
</g>
<g >
<title>apply_r2hc (32,621,899 samples, 0.21%)</title><rect x="928.4" y="53" width="2.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="931.36" y="63.5" ></text>
</g>
<g >
<title>[unknown] (19,800,118 samples, 0.13%)</title><rect x="947.7" y="69" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="950.72" y="79.5" ></text>
</g>
<g >
<title>all (15,611,485,111 samples, 100%)</title><rect x="10.0" y="133" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="143.5" ></text>
</g>
<g >
<title>dotile_buf (7,206,806 samples, 0.05%)</title><rect x="1134.0" y="101" width="0.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1137.01" y="111.5" ></text>
</g>
<g >
<title>[unknown] (2,840,288,049 samples, 18.19%)</title><rect x="910.2" y="101" width="214.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="913.24" y="111.5" >[unknown]</text>
</g>
<g >
<title>fftw_cpy2d_tiled (1,581,754 samples, 0.01%)</title><rect x="945.1" y="85" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="948.07" y="95.5" ></text>
</g>
<g >
<title>fftw_compute_tilesz (10,285,468 samples, 0.07%)</title><rect x="1134.6" y="101" width="0.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1137.55" y="111.5" ></text>
</g>
<g >
<title>fftw_transpose (12,545,546 samples, 0.08%)</title><rect x="949.5" y="85" width="0.9" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="952.45" y="95.5" ></text>
</g>
<g >
<title>apply_buf (2,337,276 samples, 0.01%)</title><rect x="1130.6" y="101" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1133.62" y="111.5" ></text>
</g>
<g >
<title>fftw_cpy1d (4,496,630 samples, 0.03%)</title><rect x="940.8" y="85" width="0.3" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="943.75" y="95.5" ></text>
</g>
<g >
<title>fftw_dft_solve (44,897,844 samples, 0.29%)</title><rect x="887.1" y="69" width="3.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="890.07" y="79.5" ></text>
</g>
</g>
</svg>
